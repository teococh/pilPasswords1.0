#pragma checksum "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e1703219f9df52791db4344f431b1d4b0c7d4ecf"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Secured), @"mvc.1.0.view", @"/Views/Home/Secured.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/_ViewImports.cshtml"
using pil_passwd_1._0;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/_ViewImports.cshtml"
using pil_passwd_1._0.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e1703219f9df52791db4344f431b1d4b0c7d4ecf", @"/Views/Home/Secured.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f760f47eff9f350b84cd97300bc9623adce0d5b7", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Secured : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
  


    var respuesta = TempData["respuesta"];

    Console.WriteLine(respuesta);



#line default
#line hidden
#nullable disable
            WriteLiteral("<script type=\"text/javascript\">\n    var url = \"");
#nullable restore
#line 14 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
          Write(Url.Action("DbConection", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\n    var buscar = \"");
#nullable restore
#line 15 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
             Write(Url.Action("Buscar", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\n    var clienteUrl = \"");
#nullable restore
#line 16 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
                 Write(Url.Action("A単adirCliente", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\n    var plataformaUrl = \"");
#nullable restore
#line 17 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
                    Write(Url.Action("A単adirPlataforma", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\n    var passUrl = \"");
#nullable restore
#line 18 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
              Write(Url.Action("A単adirPassword", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\n    var editPasswd = \"");
#nullable restore
#line 19 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
                 Write(Url.Action("EditarPassword", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\";\n    var deletePasswd = \"");
#nullable restore
#line 20 "/Users/mac/Desktop/daw2/javascript/pil-passwd-1.0/pil-passwd-1.0/Views/Home/Secured.cshtml"
                   Write(Url.Action("EliminarPass", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
    var json;

    $(function () {
        $(document).ready(function () {

            // Funcion main

            $.post(url).done(function (data) {

                console.log(JSON.parse(data[0]));
                console.log(JSON.parse(data[1]));
                console.log(JSON.parse(data[2]));
                let res = JSON.parse(data[0]);
                let cli = JSON.parse(data[1]);
                let pla = JSON.parse(data[2]);
                json = res;

                let th = """";

                CrearTabla(res);


                let options = ""<option selected value='0'/>Cliente</option>"";

                for (let i = 0; i < cli.length; i++) {

                    options += `
                        <option value=""`+ cli[i].Id + `""/>
                            `+ cli[i].Nombre + `
                        </option>
                        `;

                }
                $(""#clientes-select"").html(options);
                $(""#cliente-form"").html(options);



                $(""#p");
            WriteLiteral(@"lataformas-select"").change(function () {
                    CrearTabla(res);
                });
                $(""#clientes-select"").change(function () {
                    CrearTabla(res);
                });

                let option = ""<option selected value=''/>Plataforma</option>"";

                for (let i = 0; i < pla.length; i++) {
                    option += ""<option value='"" + pla[i].Id + ""'/>"" + pla[i].Nombre + ""</option>"";
                }

                $(""#plataformas-select"").html(option);
                $(""#plataforma-form"").html(option);


                $(""#buscar"").keyup(function () {

                    var x = $(this).val();
                    var data = { x: x }


                    $.post(buscar, data).done(function (data) {
                        var a;
                        try {
                            a = JSON.parse(data);
                        } catch {
                            a = """";
                        }
                        CrearTabla(a);
  ");
            WriteLiteral(@"                  });

                });

                // Recive array con datos para rellenar la tabla y la rellena

                function CrearTabla(a) {

                    let tab = Array();
                    for (let i = 0; i < a.length; i++) {
                        var row = {
                            id: a[i].Id,
                            Cliente: cli[cli.findIndex(x => x.Id === a[i].idCliente)].Nombre,
                            Plataforma: pla[pla.findIndex(x => x.Id === a[i].idPlataforma)].Nombre,
                            usuario: a[i].usuario,
                            password: a[i].contrase単a,
                            url: a[i].url,
                            comentario: a[i].comentario
                        };
                        tab.push(row);
                    }

                    th = """";
                    for (let i = 0; i < a.length; i++) {
                        if ($(""#clientes-select"").val() == 0 || $(""#clientes-select"").val() == null || $(""#clien");
            WriteLiteral(@"tes-select"").val() == a[i].idCliente) {
                            if ($(""#plataformas-select"").val() == null || $(""#plataformas-select"").val() == 0 || $(""#plataformas-select"").val() == a[i].idPlataforma) {
                                th += `<tr>
                                        <th scope=""row"">`+ a[i].Id + `</th>

                                        <td>` + tab[i].Cliente + `</td>
                                        <td>` + tab[i].Plataforma + `</td>
                                        <td>` + tab[i].usuario + `</td>
                                        <td>` + tab[i].password + `</td>
                                        <td>` + tab[i].url + `</td>
                                        <td>` + tab[i].comentario + `</td>
                                        <td>
                                        <button type=""button"" class=""btn btn-success editar"" data-toggle=""modal"" data-target=""#editar"" id=""editar-` + a[i].Id + `""><input style=""display: none;"" value=""` + i + `""><img");
            WriteLiteral(@" src=""/img/editar.png""></button>
                                        <button type=""button"" class=""btn btn-danger eliminar"" data-toggle=""modal"" data-target=""#eliminar""  id=""borrar-` + a[i].Id + `""><input style=""display: none;"" value=""` + i + `""><img src=""/img/eliminar.png""></i></button>
                                        </td>
                                    </tr>`;
                            }
                        }


                    }

                    let tabla = `
                    <table class=""table"" >
                        <thead>
                            <tr>
                              <th scope=""col"">#</th>
                              <th scope=""col"">Cliente</th>
                              <th scope=""col"">Plataforma</th>
                              <th scope=""col"">Usuario</th>
                              <th scope=""col"">Contrase単a</th>
                              <th scope=""col"">Url</th>
                              <th scope=""col"">Comentario</th>
        ");
            WriteLiteral(@"                      <th scope=""col"">Acciones</th>
                            </tr>
                          </thead>
                          <tbody>
                             ` + th + `
                          </tbody>
                    </table>`;

                    $(""#cont"").html(tabla);

                }

            });


        });

        // Nuevo cliente


        $(""#a単adir-cliente"").click(function () {


            var nombre = $(""#cliente-name"").val();

            var data = { Nombre: nombre }


            $.post(clienteUrl, data).done(function (data) {

                if (data) {
                    alert(""Cliente "" + nombre + "" a単adido."")
                } else {
                    alert(""Ha ocurrido un error al a単adir el nuevo cliente! :("")
                }

            })
        })

        // A単adir plataforma nueva

        $(""#a単adir-plataforma"").click(function () {


            var nombre = $(""#plataforma-name"").val();
            var data = { Nombre: nombre }


   ");
            WriteLiteral(@"         $.post(plataformaUrl, data).done(function (data) {

                if (data) {
                    alert(""Nueva plataforma "" + nombre + "" a単adida correctamente"");
                } else {
                    alert(""No se ha podido a単adir la nueva plataforma."");
                }

            });
        });

        // A単adir contrase単a nueva

        $(""#pass"").mouseup(function () {



            var idPlataforma = parseInt($(""#plataforma-txt"").val());
            var idCliente = parseInt($(""#cliente-txt"").val());
            var usuario = $(""#usuario-name"").val();
            var passwd = $(""#password-1"").val();
            var url1 = $(""#url"").val();
            var comentario = $(""#comentario"").val();

            var data = { idCliente: idCliente, idPlataforma: idPlataforma, usuario: usuario, passwd: passwd, url1: url1, comentario: comentario }

            $.post(passUrl, data).done(function (data) {

                if (data) {
                    alert(""Nueva contrase単a a単adida correctament");
            WriteLiteral(@"e! :)"")
                } else {
                    alert(""Algo ha ido mal..."")
                }

            });

        });

        // Editar linea de contrase単a

        $(""body"").on(""mouseup"", "".editar"", function (ev) {

            let y = parseInt(this.id.split('-')[1]);
            console.log(json[$(this).find(""input"").val()])
            let passData = json[$(this).find(""input"").val()];

            var html = `
                    <div class=""row p-3"">
                        <label for=""upUser"" class=""form-label text-muted"">Usuario:</label>
                        <input id=""upUser"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].usuario + `"">
                        <label for=""upContrase単a"" class=""form-label text-muted"">Contrase単a:</label>
                        <input id=""upContrase単a"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].contrase単a + `"">
                        <label for=""upComentario""");
            WriteLiteral(@" class=""form-label text-muted"">Comentario:</label>
                        <input id=""upComentario"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].comentario + `"">
                        <label for=""upPlataformaId"" class=""form-label text-muted"">Id plataforma:</label>
                        <input id=""upPlataformaId"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].idPlataforma + `"">
                        <label for=""upUrl"" class=""form-label text-muted"">Url:</label>
                        <input id=""upUrl"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].url + `"">
                        <button id=""update"" class=""btn btn-primary"">Cambiar datos</button>
                    </div>`;

            $(""#editar-cont"").html(html);

            $(""#update"").click(function () {

                var usuario = $(""#upUser"").val();
                var passwd = $(""#upContrase単a"").v");
            WriteLiteral(@"al();
                var comentario = $(""#upComentario"").val();
                var idPlataforma = $(""#upPlataformaId"").val();
                var url1 = $(""#upUrl"").val();
                var idCliente = passData.Id;
                console.log(usuario)
                console.log(passwd)
                console.log(comentario)
                console.log(idPlataforma)
                console.log(url1)
                console.log(passData.Id)

                var data = { idCliente: idCliente, idPlataforma: idPlataforma, usuario: usuario, passwd: passwd, url1: url1, comentario: comentario }

                $.post(editPasswd, data).done(function (data) {

                    if (data) {
                        alert(""Contrase単a actualizada! :)"")
                        location.reload();
                    } else {
                        alert(""Algo ha ido mal..."")
                    }

                });

            });


        })

        $(""body"").on(""mouseup"", "".eliminar"", function (ev) {
       ");
            WriteLiteral(@"     let y = parseInt(this.id.split('-')[1]);
            let id = json[$(this).find(""input"").val()].Id;
            var html = `
                    <div class=""row p-3"">
                        <label for=""upUser"" class=""form-label text-muted"">Usuario:</label>
                        <input disabled id=""upUser"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].usuario + `"">
                        <label for=""upContrase単a"" class=""form-label text-muted"">Contrase単a:</label>
                        <input disabled id=""upContrase単a"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].contrase単a + `"">
                        <label for=""upComentario"" class=""form-label text-muted"">Comentario:</label>
                        <input disabled id=""upComentario"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].comentario + `"">
                        <label for=""upPlataformaId"" class=""f");
            WriteLiteral(@"orm-label text-muted"">Id plataforma:</label>
                        <input disabled id=""upPlataformaId"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].idPlataforma + `"">
                        <label for=""upUrl"" class=""form-label text-muted"">Url:</label>
                        <input disabled id=""upUrl"" class=""col-12 form-control-plaintext"" type=""text"" value=""` + json[$(this).find(""input"").val()].url + `"">
                        <input type=""number"" id=""idData"" class=""d-none"" value=""`+ json[$(this).find(""input"").val()].Id + `"">
                    </div>`;

            $(""#eliminar-data"").html(html);

            $(""#delete"").mouseup(function () {
                var data = { id: id }

                $.post(deletePasswd, data).done(function (data) {

                    if (data) {
                        alert(""Datos eliminados!"")
                        location.reload();
                    } else {
                        alert(""Algo ha ido mal..."")
   ");
            WriteLiteral(@"                 }

                });
            })
        });


    });
</script>

<h1>Contrase単as Proyectos Inform叩ticos Levante</h1>

<div class=""btn-group"" role=""group"" aria-label=""Basic example"">
    <button type=""button"" class=""btn btn-secondary"" data-toggle=""modal"" data-target=""#passwords"">A単adir contrase単a</button>
    <button type=""button"" class=""btn btn-secondary"" data-toggle=""modal"" data-target=""#plataforma"">A単adir plataforma</button>
    <button type=""button"" class=""btn btn-secondary"" data-toggle=""modal"" data-target=""#miModal"">A単adir cliente</button>
</div>

<!-- Modal Contrase単as -->

<div id=""passwords"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Contenido del modal -->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4>Nueva contrase単a</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1703219f9df52791db4344f431b1d4b0c7d4ecf19514", async() => {
                WriteLiteral(@"
                    <input class="" m-1"" id=""plataforma-txt"" type=""text"" list=""plataforma-form"" placeholder=""Plataforma"" required />
                    <datalist id=""plataforma-form"">
                    </datalist>
                    <br />
                    <input class="" m-1"" id=""cliente-txt"" type=""text"" list=""cliente-form"" placeholder=""Cliente"" required />
                    <datalist id=""cliente-form"">
                    </datalist>
                    <br />
                    <input class="" m-1"" id=""usuario-name"" type=""text"" placeholder=""usuario"" required />
                    <br />
                    <input class="" m-1"" id=""password-1"" type=""text"" placeholder=""contrase単a"" required />
                    <br />
                    <input class="" m-1"" id=""url"" type=""text"" placeholder=""url"" />
                    <br />
                    <input class="" m-1"" id=""comentario"" type=""text"" placeholder=""comentario"" required />
                    <br />
                    <button id=""pass"" class=""");
                WriteLiteral("btn btn-success ml-1\">a単adir</button>\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<!-- Modal Plataforma -->
<div id=""plataforma"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Contenido del modal -->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4>Nueva plataforma</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1703219f9df52791db4344f431b1d4b0c7d4ecf22399", async() => {
                WriteLiteral("\n\n                    <input class=\" m-1\" id=\"plataforma-name\" type=\"text\" placeholder=\"Plataforma\" /><br />\n                    <button id=\"a単adir-plataforma\" class=\"btn btn-success m-1\">a単adir</button>\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>


<!-- Modal Clientes -->
<div id=""miModal"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Contenido del modal -->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4>Nuevo cliente</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1703219f9df52791db4344f431b1d4b0c7d4ecf24339", async() => {
                WriteLiteral("\n\n                    <input class=\" m-1\" id=\"cliente-name\" type=\"text\" placeholder=\"cliente\" /><br />\n                    <button id=\"a単adir-cliente\" class=\"btn btn-success m-1\">a単adir</button>\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>
<br />
<!-- Modal editar -->
<div id=""editar"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Contenido del modal -->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4>Modificar datos</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"" id=""editar-cont"">

            </div>
        </div>
    </div>
</div>
<!-- Modal eliminar -->
<div id=""eliminar"" class=""modal fade"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Contenido del modal -->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4>Estas seguro de que quieres eliminar estos datos?</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body""");
            BeginWriteAttribute("id", " id=\"", 17424, "\"", 17429, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                <div id=""eliminar-data"">

                </div>
                <button id=""delete"" class=""btn btn-outline-danger"">Si, eliminar</button>
                <button data-dismiss=""modal"" class=""btn btn-outline-success"">No, mantener datos</button>
            </div>
        </div>
    </div>
</div>
<select id=""clientes-select"" class=""form-control-sm m-1""></select>
<select id=""plataformas-select"" class=""form-control-sm m-1""></select>
<input type=""text"" id=""buscar"" class=""form-control-sm m-1"" />

<div id=""cont"">


</div>
<div id=""data""></div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
